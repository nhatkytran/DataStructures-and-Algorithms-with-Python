+++ Arrays & Hashing +++

>>> Contains Duplicate --> containsDuplicate.ipynb

--> Given an integer array nums, return true if any value appears \
at least twice in the array, and return false if every element is distinct.
--> nums = [1,2,3,1] --> True
--> nums = [1,2,3,4] --> False
--> nums = [1,1,1,3,3,4,3,2,4,2] --> True

>>> Valid Anagram --> validAnagram.ipynb
--> Given two strings s and t, return true if t is an anagram of s, and false otherwise.
--> An Anagram is a word or phrase formed by rearranging \
the letters of a different word or phrase, typically using
all the original letters exactly once.
--> Input: s = "anagram", t = "nagaram"
--> Output: true

>>> Replace Elements with Greatest Element on Right Side --> replaceGreatestRightSide.ipynb
--> Given an array "arr", replace every element in that array \
with the greatest element among the elements to its right, and replace the last element with -1.
--> After doing so, return the array.
---
Input: arr = [17,18,5,4,6,1]
Output: [18,6,6,6,1,-1]
Explanation: 
- index 0 --> the greatest element to the right of index 0 is index 1 (18).
- index 1 --> the greatest element to the right of index 1 is index 4 (6).
- index 2 --> the greatest element to the right of index 2 is index 4 (6).
- index 3 --> the greatest element to the right of index 3 is index 4 (6).
- index 4 --> the greatest element to the right of index 4 is index 5 (1).
- index 5 --> there are no elements to the right of index 5, so we put -1.
---
Input: arr = [400]
Output: [-1]
Explanation: There are no elements to the right of index 0.
*** Tip: Backward --> O(n)

>>> Is Subsequence --> isSubsequence.ipynb
--> Given two strings s and t, return true if s is a subsequence of t, or false otherwise.
--> A subsequence of a string is a new string that is formed from the original string \
by deleting some (can be none) of the characters without disturbing the relative positions \
of the remaining characters. (i.e., "ace" is a subsequence of "abcde" while "aec" is not).
---
Input: s = "abc", t = "ahbgdc"
Output: true
---
Input: s = "axc", t = "ahbgdc"
Output: false